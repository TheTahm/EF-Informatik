"use strict";(self.webpackChunkef_website_template=self.webpackChunkef_website_template||[]).push([[515],{3905:(e,n,i)=>{i.d(n,{Zo:()=>u,kt:()=>c});var r=i(7294);function t(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function a(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,r)}return i}function l(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?a(Object(i),!0).forEach((function(n){t(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function s(e,n){if(null==e)return{};var i,r,t=function(e,n){if(null==e)return{};var i,r,t={},a=Object.keys(e);for(r=0;r<a.length;r++)i=a[r],n.indexOf(i)>=0||(t[i]=e[i]);return t}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)i=a[r],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(t[i]=e[i])}return t}var d=r.createContext({}),o=function(e){var n=r.useContext(d),i=n;return e&&(i="function"==typeof e?e(n):l(l({},n),e)),i},u=function(e){var n=o(e.components);return r.createElement(d.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},h=r.forwardRef((function(e,n){var i=e.components,t=e.mdxType,a=e.originalType,d=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),h=o(i),c=t,p=h["".concat(d,".").concat(c)]||h[c]||m[c]||a;return i?r.createElement(p,l(l({ref:n},u),{},{components:i})):r.createElement(p,l({ref:n},u))}));function c(e,n){var i=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var a=i.length,l=new Array(a);l[0]=h;var s={};for(var d in n)hasOwnProperty.call(n,d)&&(s[d]=n[d]);s.originalType=e,s.mdxType="string"==typeof e?e:t,l[1]=s;for(var o=2;o<a;o++)l[o]=i[o];return r.createElement.apply(null,l)}return r.createElement.apply(null,i)}h.displayName="MDXCreateElement"},198:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>o});var r=i(7462),t=(i(7294),i(3905));const a={},l="Numtrip finaler Eintrag",s={permalink:"/EF-Informatik/Numtrip_finaler_Blogeintrag",editUrl:"https://github.com/TheTahm/EF-Informatik/tree/main/blog/Numtrip_finaler_Blogeintrag.md",source:"@site/blog/Numtrip_finaler_Blogeintrag.md",title:"Numtrip finaler Eintrag",description:"Numtrip ist ein Denkspiel, mit dem Ziel Zahlen zu kombinieren, bis man die Zahl 128 erreicht. Dies erfolgt, in dem man auf dem Spielfeld einen bestimmten Punkt ausw\xe4hlen kann. Falls der Wert an diesem Punkt mit mindestens einem der anliegenden Feldern \xfcbereinstimmt, werden diese zusammengenommen und der Originalwert wird verdoppelt.",date:"2024-01-25T22:18:33.000Z",formattedDate:"25. Januar 2024",tags:[],readingTime:4.62,hasTruncateMarker:!1,authors:[],frontMatter:{},prevItem:{title:"Netzwerkzugangsschicht",permalink:"/EF-Informatik/Netzwerkzugangsschicht"},nextItem:{title:"Schichtenmodel",permalink:"/EF-Informatik/Schichtenmodel"}},d={authorsImageUrls:[]},o=[{value:"Voraussetzungen f\xfcrs Spielen:",id:"voraussetzungen-f\xfcrs-spielen",level:2},{value:"Top-down-Diagramm:",id:"top-down-diagramm",level:2},{value:"Meine lose Definition:",id:"meine-lose-definition",level:2}],u={toc:o};function m(e){let{components:n,...a}=e;return(0,t.kt)("wrapper",(0,r.Z)({},u,a,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"ziel-des-spiels"},"Ziel des Spiels"),(0,t.kt)("p",null,"Numtrip ist ein Denkspiel, mit dem Ziel Zahlen zu kombinieren, bis man die Zahl 128 erreicht. Dies erfolgt, in dem man auf dem Spielfeld einen bestimmten Punkt ausw\xe4hlen kann. Falls der Wert an diesem Punkt mit mindestens einem der anliegenden Feldern \xfcbereinstimmt, werden diese zusammengenommen und der Originalwert wird verdoppelt."),(0,t.kt)("h1",{id:"die-gr\xf6sste-herausforderung"},"Die gr\xf6sste Herausforderung"),(0,t.kt)("p",null,"Mein pers\xf6nliches Problem waren meine Pythonkenntnisse, weshalb ich viele meiner Ideen nicht umsetzen konnte. Ich konnte mir vorstellen wie etwas funktioniert, jedoch hatte ich leider nicht die Syntax Kenntisse um meine Einf\xe4lle schliesslich durchzusetzten. Die gr\xf6sste Herausvorderung f\xfcr mich war der Anfang. Von Tygerjython auf Python zu wechseln war ein grosser Sprung und mir fehlten sehr viele Begriffe. Mit der Zeit jedoch wurde das Programmieren etwas einfacker und ich entwikelte in der letzten Woche des Projekts sogar Freude am Programmieren."),(0,t.kt)("p",null,(0,t.kt)("em",{parentName:"p"},"Ich habe z.B am Anfang des Projekts \xfcber 2 Sunden gebraucht um die Eingaben\xfcberpr\xfcfung zu schreiben.")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-py"},'def Feldauswahl():\n    Zauswahl=input("Welche Zeile?")\n    Sauswahl=input("Welche Spalte?")\n    try:\n        Sauswahl=int(Sauswahl)\n        Zauswahl=int(Zauswahl)\n        Zauswahl<=5\n        Sauswahl<=5\n        board[Zauswahl-1][Sauswahl-1]= \' \'\n        spielfeld()\n    except:\n        if Sauswahl.isnumeric():\n            print ("Spaltenzahl zu gorss!")\n        else:\n            print ("Das ist keine Zahl")\n        if Zauswahl.isnumeric():\n            print ("Zeilenzahl zu gorss!")\n        else:\n            print ("Das ist keine Zahl")\n        return False\n')),(0,t.kt)("p",null,(0,t.kt)("em",{parentName:"p"},"Mittlerweile kann ich eine einfachere und besser verst\xe4ndliche in unter 10 min coden.")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-py"},"def S\xfcberpr\xfcfen(frage):\n    valid=True\n    while valid:\n        try:\n            zahl=input(frage)\n            zahl = int(zahl)\n            zahl = zahl -1\n            if zahl<0 or zahl > 4:\n                raise\n            return zahl\n        except:\n            print ('Fehlerhafte Eingabe')\n")),(0,t.kt)("h1",{id:"umsetzung-des-spieles"},"Umsetzung des Spieles"),(0,t.kt)("h2",{id:"voraussetzungen-f\xfcrs-spielen"},"Voraussetzungen f\xfcrs Spielen:"),(0,t.kt)("p",null,"Man muss sich das Programm Visual Studio Code herunterladen."),(0,t.kt)("p",null,"Direkter Link zur Webseite f\xfcr den Download: ",(0,t.kt)("a",{parentName:"p",href:"https://code.visualstudio.com/"},"https://code.visualstudio.com/")),(0,t.kt)("p",null,"Dann muss man nur noch auf Github meinen Code kopieren und ihn in Visual Studio Code einf\xfcgen."),(0,t.kt)("p",null,"Direkter Link zu meinem Numtrip Code auf Github:\n",(0,t.kt)("a",{parentName:"p",href:"https://github.com/TheTahm/EF-Informatik/blob/main/docs/numtrip/game2.py"},"https://github.com/TheTahm/EF-Informatik/blob/main/docs/numtrip/game2.py")),(0,t.kt)("h2",{id:"top-down-diagramm"},"Top-down-Diagramm:"),(0,t.kt)("p",null,(0,t.kt)("em",{parentName:"p"},"Finaler Top-down Entwurf")),(0,t.kt)("p",null,(0,t.kt)("img",{src:i(7192).Z,width:"1599",height:"1132"})),(0,t.kt)("h2",{id:"meine-lose-definition"},"Meine lose Definition:"),(0,t.kt)("p",null,(0,t.kt)("em",{parentName:"p"},"Die ",(0,t.kt)("inlineCode",{parentName:"em"},"lose()")," Funktion war meine zweitletzte H\xfcrde vor dem Abschluss des Spiels. Ich war sehr stolz als ich sie endlich hinbekommen habe.")),(0,t.kt)("p",null,"Ich habe mich vom ",(0,t.kt)("inlineCode",{parentName:"p"},"flood_fill()")," Code inspirieren lassen, da dieser eine \xe4hnliche Funktion hat. Beim ",(0,t.kt)("inlineCode",{parentName:"p"},"flood_fill()")," werden die anliegenden Felder \xfcberpr\xfcft und dann wird der Befehl f\xfcr diese Felder wieder aufgerufen. Man nennt dies eine Rekursion, was bedeutet, dass sie sich selber wieder aufruft. Beim ",(0,t.kt)("inlineCode",{parentName:"p"},"lose()"),"brauchen wir dies jedoch nicht. Ich habe mir \xfcberlegt, dass das Spiel verloren verloren ist wenn kein einziges Feld den gleichen Wert wie eines seiner vier Anliegenden hat. Damit wusste ich, dass ich einfach bei jedem Feld die 4 Anliegenden anschauen musste und danach \xfcberpr\xfcfen, ob diese gleich sind. Dies mache ich in diesem Teil des Codes:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-py"}," if x!=4: # Ich \xfcberpr\xfcfe ob x schon 4 ist, was bedeuten w\xfcrde, dass wir schon in der Spalte ganz rechts w\xe4ren. Dies f\xfchrt dazu, dass der Code abst\xfcrzt oder nicht richtig funktioniert, da wir versuchen eine Spalte weiter rechts anzuschauen, die es nicht gibt.\n        if board[x+1][y]!=board[x][y]: # Hier wird \xfcberpr\xfcft, ob das Feld unter dem Ausgew\xe4hlten den gleichen Wert hat. \n            z=z+1 # Der Code rechnet jedes Mal z+1 wenn das anliegende Feld nicht den gleichen Wert hat.\nelse: # Wenn x schon 4 ist, gibt es rechts davon kein Feld mit dem man es multiplizieren kann, deswegen kann man z+1 rechnen.\n    z=z+1\n")),(0,t.kt)("p",null,"Dies wiederhole ich dann f\xfcr alle 4 anliegenden Felder. Wenn nach der \xdcberpr\xfcfung ",(0,t.kt)("inlineCode",{parentName:"p"},"z=4")," ist, bedeutet das, dass dieses Feld nicht mit einem anderen zusammengef\xfchrt werden kann."),(0,t.kt)("p",null,"Ich habe mir dann \xfcberlegt, dass ich z\xe4hlen k\xf6nnte, wie viele Felder nicht zusammengef\xfchrt werden k\xf6nnen.\nWenn z=4 ist, rechnet es:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-py"},"if z==4:\n    a=a+1\n")),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"a")," ist der Z\xe4hler f\xfcr alle Felder die nicht zusammengef\xfchrt werden k\xf6nnen. Wir haben in unserem Spiel 25 Felder. Wenn also ",(0,t.kt)("inlineCode",{parentName:"p"},"a=25")," ist bedeutet das, dass kein einziges Feld mit einem anderen zusammengef\xfcgt werden kann und man das Spiel verloren hat."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-py"},"def lose():\n    global o            #globaler Spielzugz\xe4hler\n    a=0\n    for y in range(5): # y ist die Zeilenzahl\n        for x in range(5): # x ist die Spaltenzahl\n            z=0         # z muss bei jedem neuen Feld 0 gesetzt werden\n            if x!=4:\n                if board[x+1][y]!=board[x][y]:     #\xdcberpr\xfcft das Feld darunter\n                    z=z+1                           \n            else:\n                z=z+1\n            if x!=0:\n                if board[x-1][y]!=board[x][y]:     #\xdcberpr\xfcft das Feld dar\xfcber\n                    z=z+1\n            else:\n                z=z+1\n            if y!=4:\n                if board[x][y+1]!=board[x][y]:     #\xdcberpr\xfcft das Feld rechts davon\n                    z=z+1\n            else:\n                z=z+1\n            if y!=0:\n                if board[x][y-1]!=board[x][y]:     #\xdcberpr\xfcft das Feld links davon\n                    z=z+1\n            else:\n                z=z+1\n            if z==4:\n                a=a+1\n    if a==25:\n        print (f'Sie haben in {o} Z\xfcgen veloren!') # printet die Anzahl Spielz\xfcge\n        o=0     # resettet den Spielzugz\xe4hler\n        Wiederspielen(\"Wollen Sie noch einmal spielen (ja/nein)?\") # Nachdem man verloren hat, kann man eine neue Runde anfangen oder aufh\xf6ren\n")),(0,t.kt)("h1",{id:"empfehlung-an-andere-ef-sch\xfclerinnen"},"Empfehlung an andere EF Sch\xfcler:innen"),(0,t.kt)("p",null,"Fangt fr\xfch genug an! Das Abgabedatum kommt schneller als gedacht. Vor allem mit den Weinachtsferien kurz vor der Abgabe vergisst man es gerne. Glaubt mir, ich rede aus Erfahrung. Es ist viel sch\xf6ner programmieren zu k\xf6nnen, wenn man dazu motiviert ist und sich nicht die ganze unter Stress gesetzt f\xfchlt. Ich musste n\xe4mlich einen fehlerhaften Code, welcher die Felder leeren kann in einer Woche zu einem fertigen Spiel programmieren. ",(0,t.kt)("strong",{parentName:"p"},"Meine wichtigste Erkenntnis ist jedoch, dass ihr ausprobieren und nicht zur\xfcckschrecken sollt. Ich hatte lange Zeit Angst weiter zu arbeiten, weil ich kaum die Auftr\xe4ge im Unterricht fertigstellen konnte. Jetzt musste ich mich aber ein paar Stunden hinsetzen und programmieren und dieses Mal konnte ich es nicht einfach aufschieben. Ich war erstaunt, wie viel ich geschafft habe und wie viel ich dazu gelernt habe. Was mir sehr geholfen hat, war jedes Problem in seine Einzelteile zu zerkleinern und jedes Problem mit einfachen Commands zu l\xf6sen und dann zusammenzusetzen.Mein Code ist vielleicht nicht der sch\xf6nste oder der effizienteste, jedoch funktioniert er.")))}m.isMDXComponent=!0},7192:(e,n,i)=>{i.d(n,{Z:()=>r});const r=i.p+"assets/images/Top-down2-dcb455f5cb9af2cfd37de49989777977.jpeg"}}]);